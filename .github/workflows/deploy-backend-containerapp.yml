name: deploy-backend-containerapp (reusable)

on:
  workflow_call:
    inputs:
      containerapp-name:
        description: 'Azure Container App name'
        required: true
        type: string
      resource-group:
        description: 'Resource group containing the Container App'
        required: true
        type: string
      dockerfile-path:
        description: 'Path to Dockerfile (e.g. backend/Dockerfile)'
        required: true
        type: string
      context-path:
        description: 'Docker build context'
        required: false
        default: '.'
        type: string
      image-name:
        description: 'Fully-qualified image tag (e.g. myregistry.azurecr.io/ground-truth-api:sha-${{ github.sha }})'
        required: true
        type: string
      registry-login-server:
        description: 'Registry login server (e.g. myregistry.azurecr.io)'
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true

jobs:
  container-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Azure Login (OIDC alt: prefer federated credentials later)"
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry-login-server }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context-path }}
          file: ${{ inputs.dockerfile-path }}
          push: true
          tags: ${{ inputs.image-name }}

      - name: Update Container App
        run: |
          az containerapp update \
            --name "${{ inputs.containerapp-name }}" \
            --resource-group "${{ inputs.resource-group }}" \
            --image "${{ inputs.image-name }}"
